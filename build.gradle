plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'ahn.sungsin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // jpa
    implementation 'mysql:mysql-connector-java:8.0.29' // mysql
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // thymeleaf
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-security' // spring security
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.1' // validation
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.1.1.RELEASE' // 타임리프에서 스프링시큐리티의 문법이나 형식을 지원하는 확장팩 라이브러리
    implementation 'org.modelmapper:modelmapper:2.3.8' // modelmapper
    runtimeOnly 'com.h2database:h2:1.4.199' // h2 database
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test' // spring security test
    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // querldsl 라이브러리
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // QClass를 사용하기 위한 라이브러리
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
    useJUnitPlatform()
}

// queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
